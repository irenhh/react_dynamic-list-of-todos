{"version":3,"sources":["TodoItem.js","User.js","Sorting.js","TodoList.js","App.js","index.js"],"names":["TodoItem","props","item","react_default","a","createElement","className","type","checked","completed","id","htmlFor","onClick","onChange","title","user","username","User","_props$user","name","email","phone","website","href","Sorting","sortBy","isLoaded","TodoList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","listOfTodos","buttonDisabled","text","handleClick","bind","assertThisInitialized","checkedTodo","setState","prevState","map","todo","target","nested","sort","b","String","localeCompare","_this2","todosApi","fetch","then","response","json","usersApi","Promise","all","finalVals","todos","users","objectSpread","find","userId","_this3","disabled","src_Sorting","filterStatus","src_TodoItem","key","src_User","React","Component","App","style","textAlign","color","src_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.491c7bed.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem(props) {\n  const { item } = props;\n\n  return (\n    <div className=\"todo-item\">\n      <input\n        type=\"checkbox\"\n        checked={item.completed}\n        className=\"todo-item__input\"\n        id={item.id}\n      />\n\n      <label\n        className=\"todo-item__title\"\n        htmlFor={item.id}\n        onClick={() => props.onChange(item.id)}\n      >\n        {item.title}\n      </label>\n\n      <hr />\n      <p>{item.user.username}</p>\n    </div>\n  );\n}\n\nTodoItem.propTypes = {\n  item: PropTypes.shape({\n    completed: PropTypes.bool,\n    title: PropTypes.string,\n    user: PropTypes.object,\n    id: PropTypes.number,\n  }).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User(props) {\n  const {\n    name,\n    email,\n    phone,\n    website,\n  } = props.user;\n\n  return (\n    <div className=\"user\">\n      <p>\n        Name:\n        {name}\n      </p>\n      <p>\n        Email:\n        {email}\n      </p>\n      <p>\n        Phone:\n        {phone}\n      </p>\n      <p className=\"user__website\">\n        Website:\n        <a className=\"user__website-link\" href={website}>\n          {website}\n        </a>\n      </p>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n    website: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Sorting(props) {\n  const { sortBy, isLoaded } = props;\n\n  return (\n    isLoaded && (\n      <div>\n        <span>Sort by</span>\n        <button\n          type=\"button\"\n          onClick={() => sortBy('title')}\n          className=\"sorting-button\"\n        >\n          title\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => sortBy('name', 'user')}\n          className=\"sorting-button\"\n        >\n          user\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => sortBy('completed')}\n          className=\"sorting-button\"\n        >\n          incompleted first\n        </button>\n      </div>\n    )\n  );\n}\n\nSorting.propTypes = {\n  isLoaded: PropTypes.bool.isRequired,\n  sortBy: PropTypes.func.isRequired,\n};\n\nexport default Sorting;\n","import React from 'react';\nimport TodoItem from './TodoItem';\nimport User from './User';\nimport Sorting from './Sorting';\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfTodos: [],\n      buttonDisabled: false,\n      isLoaded: false,\n      text: 'LOAD',\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.sortBy = this.sortBy.bind(this);\n    this.checkedTodo = this.checkedTodo.bind(this);\n  }\n\n  checkedTodo(id) {\n    this.setState((prevState) => {\n      const checkedTodos = prevState.listOfTodos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n      return {\n        listOfTodos: checkedTodos,\n      };\n    });\n  }\n\n  sortBy(target, nested) {\n    if (!nested) {\n      this.setState({\n        listOfTodos: this.state.listOfTodos\n          .sort((a, b) => String(a[target]).localeCompare(String(b[target]))),\n      });\n    } else {\n      this.setState({\n        listOfTodos: this.state.listOfTodos\n          .sort((a, b) => (\n            String(a[nested][target]).localeCompare(String(b[nested][target]))\n          )),\n      });\n    }\n  }\n\n  handleClick() {\n    this.setState({ buttonDisabled: true, text: 'Loading...' });\n    const todosApi = fetch('https://jsonplaceholder.typicode.com/todos')\n      .then(response => response.json());\n    const usersApi = fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json());\n\n    Promise.all([todosApi, usersApi])\n      .then((finalVals) => {\n        const todos = finalVals[0];\n        const users = finalVals[1];\n        this.setState({\n          listOfTodos: todos.map(todo => (\n            {\n              ...todo,\n              user: users.find(user => user.id === todo.userId),\n            }\n          )),\n          isLoaded: true,\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"todo-list\">\n        { !this.state.isLoaded && (\n          <button\n            onClick={this.handleClick}\n            type=\"button\"\n            disabled={this.state.buttonDisabled}\n            className=\"load-button\"\n          >\n            {this.state.text}\n          </button>\n        )}\n\n        <Sorting\n          isLoaded={this.state.isLoaded}\n          sortBy={this.sortBy}\n          filterStatus={this.filterStatus}\n        />\n\n        {this.state.listOfTodos.map(todo => (\n          <div className=\"todo-list__item\">\n            <TodoItem\n              key={todo.id}\n              item={todo}\n              checked={todo.completed}\n              onChange={this.checkedTodo}\n            />\n            <User user={todo.user} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from 'react';\nimport TodoList from './TodoList';\n\nfunction App() {\n  return (\n    <div>\n      <h1 style={{ textAlign: 'center', color: '#171821' }}>ToDo List</h1>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}